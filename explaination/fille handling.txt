Hereâ€™s a **line-by-line explanation** of the **Student Database Management System in C++ using file handling**:

---

### ðŸ”½ Headers & Namespace

```cpp
#include <iostream>
#include <fstream>
#include <cstring>
using namespace std;
```

* `iostream`: for input/output
* `fstream`: for file operations
* `cstring`: for string functions (not heavily used here, but included)
* `using namespace std;`: avoids prefixing with `std::`

---

### ðŸ”½ `Student` Structure

```cpp
struct Student {
    int rollNo;
    char name[50];
    char division;
    char address[100];
};
```

Defines the structure to hold student data:

* `rollNo`: student roll number
* `name`: student name
* `division`: single character (e.g., 'A', 'B')
* `address`: full address

---

### ðŸ”½ Add Student Function

```cpp
void addStudent() {
    ofstream outFile("students.dat", ios::binary | ios::app);
```

* Opens `students.dat` in **binary append mode**.

```cpp
    Student s;
    cout << "Enter Roll Number: ";
    cin >> s.rollNo;
    cin.ignore(); // Clear newline from input buffer
    cout << "Enter Name: ";
    cin.getline(s.name, 50);
    cout << "Enter Division: ";
    cin >> s.division;
    cin.ignore(); // Again clear newline
    cout << "Enter Address: ";
    cin.getline(s.address, 100);
```

* Takes user input for all fields.

```cpp
    outFile.write((char*)&s, sizeof(s));
    outFile.close();
    cout << "Student record added successfully.\n";
```

* Writes the student struct in binary format.

---

### ðŸ”½ Display Student by Roll Number

```cpp
void displayStudent() {
    ifstream inFile("students.dat", ios::binary);
    Student s;
    int roll;
    bool found = false;

    cout << "Enter Roll Number to search: ";
    cin >> roll;
```

* Opens the file in **binary read mode**.
* Searches for the student with the specified roll number.

```cpp
    while (inFile.read((char*)&s, sizeof(s))) {
        if (s.rollNo == roll) {
            // print details
            found = true;
            break;
        }
    }
```

* Reads each record, compares roll number.

```cpp
    if (!found)
        cout << "Student record not found.\n";

    inFile.close();
```

---

### ðŸ”½ Delete Student by Roll Number

```cpp
void deleteStudent() {
    ifstream inFile("students.dat", ios::binary);
    ofstream tempFile("temp.dat", ios::binary);
```

* Opens original file for reading, creates a temp file for writing.

```cpp
    while (inFile.read((char*)&s, sizeof(s))) {
        if (s.rollNo != roll) {
            tempFile.write((char*)&s, sizeof(s));
        } else {
            found = true;
        }
    }
```

* Copies all records **except** the one to be deleted into the temp file.

```cpp
    inFile.close();
    tempFile.close();

    remove("students.dat");
    rename("temp.dat", "students.dat");
```

* Deletes the old file and renames the temp file to keep updated data.

---

### ðŸ”½ Main Function â€“ Menu Driven

```cpp
int main() {
    int choice;

    do {
        cout << "\n--- Student Database Menu ---\n";
        cout << "1. Add Student\n";
        cout << "2. Display Student by Roll Number\n";
        cout << "3. Delete Student\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
```

* Shows a looped menu until user chooses to exit.

```cpp
        switch (choice) {
            case 1: addStudent(); break;
            case 2: displayStudent(); break;
            case 3: deleteStudent(); break;
            case 4: cout << "Exiting program.\n"; break;
            default: cout << "Invalid choice. Try again.\n";
        }
    } while (choice != 4);
```

---

### âœ… Sample Output (for Add + Display)

```
--- Student Database Menu ---
1. Add Student
2. Display Student by Roll Number
3. Delete Student
4. Exit
Enter your choice: 1
Enter Roll Number: 101
Enter Name: John Doe
Enter Division: A
Enter Address: 123 Main St
Student record added successfully.

--- Student Database Menu ---
Enter your choice: 2
Enter Roll Number to search: 101

Student Found:
Roll No: 101
Name: John Doe
Division: A
Address: 123 Main St
```

Would you like me to modify this code to add features like **update** or **display all students**?
